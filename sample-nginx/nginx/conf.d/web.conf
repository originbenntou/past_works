# vHost設定
server {
    # port
    listen      80;
    # サーバーへのリクエストヘッダでHostの値がserver_nameと一致するとこのディレクティブの処理が行われる
    server_name sample.com;

    # アクセスログ mainという名前
    access_log  /var/log/nginx/access.log main;
    # ドキュメントルート
    root        /var/www/sample.com/;

    # パスが / のとき
    location / {
        # 左から順番にファイルを探す
        # sample.com/?hogeでアクセスしたとき、ドキュメントルート配下にhogeというファイルを探して、なければsample.com/index.php?hogeを探しに行く
        try_files $uri /index.php?$args;
    }

    # confにif文が書ける
    # ~で正規表現を開始を意味し、$http_cookie内にhoge_flagという値がセットされていたら$flagに1をセットする
    # この場合の正規表現が腑に落ちず...誰かコメント求む
    set $flag 0;
    if ( $http_cookie ~* hoge_flag ) {
        set $flag 1;
    }

    # パスが .php のとき
    location ~ \.php {
        # パラメータ読み込み
        include       fastcgi_params;
        # ホスト名だと思う /var/run/php-fpm.sock を指すような設定がどこかにあるんじゃないか
        fastcgi_pass  php-fpm;
        # $realpath_root rootに設定したパス
        # $fastcgi_script_name スラッシュで終わるURIの後に追加されるファイル名 domain/hoge.php のhogeをセット
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT   $realpath_root;
        fastcgi_param APPLICATION_ENV production;
        # $http_x_forwarded_for 接続元IP
        fastcgi_param HTTP_X_FORWARDED_FOR $http_x_forwarded_for;

        # fastcgi_cache_pathでつけたゾーン名
        fastcgi_cache        FASTCGI;
        # $request_method GET or POST...
        # $http_x_forwarded_proto ELBからのリクエスト形式 http or https
        # $host リクエストヘッダのホスト名 この場合ドメイン
        # $request_uri リクエストURI パス部分
        fastcgi_cache_key    $request_method:$http_x_forwarded_proto:$host$request_uri;
        # 変数が0でない場合、キャッシュから応答しない（キャッシュ自体はする）
        # $arg_hoge リクエストURIのhogeパラメータ
        fastcgi_cache_bypass $arg_hoge;
        fastcgi_cache_bypass $flag;
        # 変数が0でない場合キャッシュをしない
        fastcgi_no_cache     $flag;

        # $hostname ホスティングサーバーの環境変数（gethostname）から取れる値
        # alwaysは常に
        add_header X-Server-Name $hostname always;
        # $request_time リクエスト処理時間
        add_header X-Request-Time $request_time always;
        add_header X-Realpath-Root $realpath_root always;
        add_header X-Cache-Key $request_methodhttp_x_forwarded_proto:$host$request_uri always;
        # $upstream_cache_status キャッシュ結果 MISSとかHITとかBYPASSとか
        add_header X-Cache-Status $upstream_cache_status always;
        # VaryヘッダにUAを組み合わせてキャッシュする CloudFront（キャッシュサーバー）で使ってるのかな
        add_header Vary User-Agent always;
    }

    # リバースプロキシする際のヘッダ情報
    # たぶんAPIだったりに飛ばす設定がどこかにあるのでは...?
    # いや使われてないなこいつら...
    proxy_set_header Host               $host;
    proxy_set_header X-Real-IP          $remote_addr;
    proxy_set_header X-Forwarded-Host   $host;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;

    error_page 500 502 504 /50x.html;
    location /50x.html {
        root /var/www/html;
    }

    # mapディレクティブ
    # if文でややこしいのが...
    set $device "pc";
    if ( $http_user_agent ~ iPhone) {
        set $device "iphone";
    }
    if ( $http_user_agent ~ Android) {
        set $device "android";
    }

    # こうできる
    # https://qiita.com/cubicdaiya/items/d938f3354f424830630b
    map $http_user_agent $device {
        default pc;
        ~iPhone iphone
        ~Android android;
    }
}
